/*
 * File: app/controller/Login.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tattlr.controller.Login', {
    extend: 'Ext.app.Controller',

    config: {
        routes: {
            'login': 'showLogin'
        },

        control: {
            "button#login": {
                tap: 'onLoginTap'
            },
            "fieldset#resetPassword": {
                show: 'onResetPasswordShow'
            }
        }
    },

    onLoginTap: function(button, e, eOpts) {
        Ext.ComponentQuery.query('#login')[0].setMasked({xtype:'loadmask', message: 'Signing In...'});


        Parse.User.logIn(Ext.ComponentQuery.query('#username')[0].getValue(), Ext.ComponentQuery.query('#password')[0].getValue(), {
            success: function(user) {

                // Do stuff after successful login.
                //FP.config.Runtime.setCurrentUserId(user.id);
                var headers = {
                    "X-Parse-Application-Id": "a2pPfe7u8rb4NUO9lqFGN606n7hvDltjw3Co0m5s",
                    "X-Parse-REST-API-Key": "SrvankvAXg4vRYv4hmgSJAdiIZJV1WFUVikSj95J",
                    "X-Parse-Session-Token": Parse.User.current()._sessionToken,
                    "Content-Type": "application/json"
                };

                Ext.getStore('Accounts_Rest').getProxy().setHeaders(headers);
                Ext.getStore('UserAccounts_Rest').getProxy().setHeaders(headers);
                Ext.getStore('Transactions').getProxy().setHeaders(headers);

                Ext.ComponentQuery.query('#toolbar')[0].show();
                Ext.ComponentQuery.query('#login')[0].setMasked(false);
                FP.app.redirectTo('accounts');

            },
            error: function(user, error) {

                // The login failed. Check error to see why.
                Ext.ComponentQuery.query('#login')[0].setMasked(false);

                // check to see if we're in Phonegap...
                if(typeof navigator.alert !== 'undefined') {
                    navigator.notification.alert(error.message, function() {}, error.code, 'OK');
                } else {
                    alert("Error: " + error.code + " " + error.message);
                }
            }
        });
    },

    onResetPasswordShow: function(component, eOpts) {
        var resetEmail = Ext.ComponentQuery.query('#username')[0].getValue();

        if(resetEmail !== '') {
            Ext.ComponentQuery.query('#usernameReset')[0].setValue(resetEmail);
            Ext.ComponentQuery.query('#resetPassword')[0].setUi('confirm');
        }
    },

    showLogin: function() {
        var main = Ext.getCmp('main'),
            login = Ext.create('FP.view.Login');

        /*
        main.query('#addUser')[0].show();
        main.query('#toolbar')[0].setTitle('Users');
        main.query('#menuButton')[0].show();
        main.query('#back')[0].hide();
        main.query('#editUser')[0].hide();
        main.query('#accountMenu')[0].hide();

        */
        main.setActiveItem(login);
    }

});